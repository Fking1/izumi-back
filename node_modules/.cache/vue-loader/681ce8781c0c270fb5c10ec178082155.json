{"remainingRequest":"/Users/fking/VueProjects/izumi-back/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/fking/VueProjects/izumi-back/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/fking/VueProjects/izumi-back/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fking/VueProjects/izumi-back/src/views/ad-manage/AdSite.vue?vue&type=template&id=02e07504&","dependencies":[{"path":"/Users/fking/VueProjects/izumi-back/src/views/ad-manage/AdSite.vue","mtime":1555309437517},{"path":"/Users/fking/VueProjects/izumi-back/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fking/VueProjects/izumi-back/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/fking/VueProjects/izumi-back/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fking/VueProjects/izumi-back/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"el-form\",\n        {\n          staticClass: \"query-form\",\n          attrs: { inline: true, model: _vm.query }\n        },\n        [\n          _c(\n            \"el-form-item\",\n            { staticClass: \"query-form-item\" },\n            [\n              _c(\"el-input\", {\n                attrs: { placeholder: \"广告位id\" },\n                model: {\n                  value: _vm.query.site_id,\n                  callback: function($$v) {\n                    _vm.$set(_vm.query, \"site_id\", $$v)\n                  },\n                  expression: \"query.site_id\"\n                }\n              })\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            [\n              _c(\n                \"el-button-group\",\n                [\n                  _c(\"el-button\", {\n                    attrs: { type: \"primary\", icon: \"el-icon-refresh\" },\n                    on: { click: _vm.onReset }\n                  }),\n                  _c(\n                    \"el-button\",\n                    {\n                      attrs: { type: \"primary\", icon: \"search\" },\n                      on: { click: _vm.onSubmit }\n                    },\n                    [_vm._v(\"查询\")]\n                  ),\n                  _c(\n                    \"el-button\",\n                    {\n                      attrs: { type: \"primary\" },\n                      nativeOn: {\n                        click: function($event) {\n                          return _vm.handleForm(null, null)\n                        }\n                      }\n                    },\n                    [_vm._v(\"新增\")]\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _c(\n        \"el-table\",\n        {\n          directives: [\n            {\n              name: \"loading\",\n              rawName: \"v-loading\",\n              value: _vm.loading,\n              expression: \"loading\"\n            }\n          ],\n          staticStyle: { width: \"100%\" },\n          attrs: { data: _vm.list }\n        },\n        [\n          _c(\"el-table-column\", {\n            attrs: { label: \"ID\", prop: \"site_id\", fixed: \"\" }\n          }),\n          _c(\"el-table-column\", {\n            attrs: { label: \"广告位名称\", prop: \"site_name\", fixed: \"\" }\n          }),\n          _c(\"el-table-column\", {\n            attrs: {\n              label: \"广告位描述\",\n              prop: \"describe\",\n              with: \"300\",\n              \"show-overflow-tooltip\": true\n            }\n          }),\n          _c(\"el-table-column\", {\n            attrs: { label: \"最后更新时间\", prop: \"update_time\" },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(scope) {\n                  return [\n                    _c(\"i\", { staticClass: \"el-icon-time\" }),\n                    _c(\"span\", [_vm._v(_vm._s(scope.row.modified_time))])\n                  ]\n                }\n              }\n            ])\n          }),\n          _c(\"el-table-column\", {\n            attrs: { label: \"操作\", fixed: \"right\" },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(scope) {\n                  return [\n                    _c(\n                      \"el-button\",\n                      {\n                        attrs: { type: \"text\", size: \"small\" },\n                        nativeOn: {\n                          click: function($event) {\n                            return _vm.handleForm(scope.$index, scope.row)\n                          }\n                        }\n                      },\n                      [_vm._v(\"编辑\")]\n                    ),\n                    _c(\n                      \"el-button\",\n                      {\n                        attrs: { type: \"text\", size: \"small\" },\n                        nativeOn: {\n                          click: function($event) {\n                            return _vm.handleDel(scope.$index, scope.row)\n                          }\n                        }\n                      },\n                      [_vm._v(\"删除\")]\n                    )\n                  ]\n                }\n              }\n            ])\n          })\n        ],\n        1\n      ),\n      _c(\"el-pagination\", {\n        attrs: {\n          \"page-size\": _vm.query.limit,\n          layout: \"prev, pager, next\",\n          total: _vm.total\n        },\n        on: { \"current-change\": _vm.handleCurrentChange }\n      }),\n      _c(\n        \"el-dialog\",\n        {\n          attrs: {\n            title: _vm.formMap[_vm.formName],\n            visible: _vm.formVisible,\n            \"before-close\": _vm.hideForm,\n            width: \"85%\",\n            top: \"5vh\"\n          },\n          on: {\n            \"update:visible\": function($event) {\n              _vm.formVisible = $event\n            }\n          }\n        },\n        [\n          _c(\n            \"el-form\",\n            {\n              ref: \"dataForm\",\n              attrs: { model: _vm.formData, rules: _vm.formRules }\n            },\n            [\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"广告位名称\", prop: \"site_name\" } },\n                [\n                  _c(\"el-input\", {\n                    attrs: { \"auto-complete\": \"off\" },\n                    model: {\n                      value: _vm.formData.site_name,\n                      callback: function($$v) {\n                        _vm.$set(_vm.formData, \"site_name\", $$v)\n                      },\n                      expression: \"formData.site_name\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\n                \"el-form-item\",\n                {\n                  attrs: { label: \"包含广告（拖动更改排序）\", prop: \"describe\" }\n                },\n                [\n                  _c(\"span\", { staticStyle: { color: \"red\" } }, [\n                    _vm._v(\"注意：广告列表中红色背景为已禁用\")\n                  ]),\n                  _c(\n                    \"div\",\n                    { staticClass: \"remove-list-box\" },\n                    [\n                      _c(\n                        \"div\",\n                        { staticClass: \"remove-list\" },\n                        [\n                          _c(\n                            \"draggable\",\n                            {\n                              attrs: { element: \"ul\" },\n                              model: {\n                                value: _vm.formData.ads,\n                                callback: function($$v) {\n                                  _vm.$set(_vm.formData, \"ads\", $$v)\n                                },\n                                expression: \"formData.ads\"\n                              }\n                            },\n                            _vm._l(_vm.formData.ads, function(item, index) {\n                              return _c(\n                                \"li\",\n                                {\n                                  key: index,\n                                  staticClass: \"remove-list-item\",\n                                  staticStyle: { cursor: \"move\" },\n                                  style: {\n                                    backgroundColor:\n                                      item.status === 1 ? \"#fff\" : \"#fef0f0\",\n                                    color:\n                                      item.status === 1 ? \"#606266\" : \"#f56c6c\"\n                                  }\n                                },\n                                [\n                                  _vm._v(\n                                    \"\\n                                \" +\n                                      _vm._s(item.title) +\n                                      \" - \" +\n                                      _vm._s(item.describe) +\n                                      \"（ID：\" +\n                                      _vm._s(item.ad_id) +\n                                      \"）\\n                                \"\n                                  ),\n                                  _c(\"i\", {\n                                    staticClass:\n                                      \"el-icon-close remove-list-close\",\n                                    on: {\n                                      click: function($event) {\n                                        return _vm.handleAdClose(index)\n                                      }\n                                    }\n                                  })\n                                ]\n                              )\n                            }),\n                            0\n                          )\n                        ],\n                        1\n                      ),\n                      _vm._v(\n                        \"\\n                    添加广告（填写广告ID，批量添加以英文逗号隔开，按顺序排列）\\n                    \"\n                      ),\n                      _c(\n                        \"el-select\",\n                        {\n                          attrs: {\n                            size: \"mini\",\n                            multiple: \"\",\n                            filterable: \"\",\n                            remote: \"\",\n                            \"reserve-keyword\": \"\",\n                            placeholder: \"输入广告ID查找\",\n                            \"no-data-text\": _vm.adListNoDataText,\n                            \"remote-method\": _vm.queryAdIdAsync,\n                            loading: _vm.queryAdIdAsyncLoading\n                          },\n                          on: { change: _vm.handleAdChange },\n                          model: {\n                            value: _vm.adId,\n                            callback: function($$v) {\n                              _vm.adId = $$v\n                            },\n                            expression: \"adId\"\n                          }\n                        },\n                        _vm._l(_vm.adList, function(item) {\n                          return _c(\"el-option\", {\n                            key: item.ad_id,\n                            attrs: { label: item.title, value: item.ad_id }\n                          })\n                        }),\n                        1\n                      ),\n                      _c(\n                        \"el-button\",\n                        {\n                          staticStyle: { \"margin-left\": \"5px\" },\n                          attrs: { type: \"primary\", size: \"mini\" },\n                          nativeOn: {\n                            click: function($event) {\n                              return _vm.handleAdSubmit()\n                            }\n                          }\n                        },\n                        [_vm._v(\"插入\")]\n                      )\n                    ],\n                    1\n                  )\n                ]\n              ),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"描述\", prop: \"describe\" } },\n                [\n                  _c(\"el-input\", {\n                    attrs: { \"auto-complete\": \"off\" },\n                    model: {\n                      value: _vm.formData.describe,\n                      callback: function($$v) {\n                        _vm.$set(_vm.formData, \"describe\", $$v)\n                      },\n                      expression: \"formData.describe\"\n                    }\n                  })\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _c(\n            \"div\",\n            {\n              staticClass: \"dialog-footer\",\n              attrs: { slot: \"footer\" },\n              slot: \"footer\"\n            },\n            [\n              _c(\n                \"el-button\",\n                {\n                  nativeOn: {\n                    click: function($event) {\n                      return _vm.hideForm($event)\n                    }\n                  }\n                },\n                [_vm._v(\"取消\")]\n              ),\n              _c(\n                \"el-button\",\n                {\n                  attrs: { type: \"primary\", loading: _vm.formLoading },\n                  nativeOn: {\n                    click: function($event) {\n                      return _vm.formSubmit()\n                    }\n                  }\n                },\n                [_vm._v(\"提交\")]\n              )\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}