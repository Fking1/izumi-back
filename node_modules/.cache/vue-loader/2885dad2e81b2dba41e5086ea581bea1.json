{"remainingRequest":"/Users/fking/VueProjects/izumi-back/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fking/VueProjects/izumi-back/src/views/login/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fking/VueProjects/izumi-back/src/views/login/index.vue","mtime":1555256517341},{"path":"/Users/fking/VueProjects/izumi-back/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fking/VueProjects/izumi-back/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nexport default {\n    data() {\n        let validatepassword = (rule, value, callback) => {\n            if (value === \"\") {\n                callback(new Error(\"请输入密码\"))\n                return\n            } \n            callback()\n        }\n        return {\n            ruleForm: {\n                username: \"admin\",\n                password: \"admin\",\n                checked: true\n            },\n            rules: {\n                userName: [\n                    { required: true, message: \"请输入登录名\", trigger: \"blur\" }\n                ],\n                password: [{ required: true, validator: validatepassword, trigger: \"blur\" }]\n            },\n            loading: false, // 登录loading\n            redirect: null // 回调地址\n        };\n    },\n    methods: {\n        handleLogin() {\n            this.$refs[\"ruleForm\"].validate(valid => {\n                if (valid) {\n                    this.loading = true;\n                    this.$store\n                        .dispatch(\"loginName\", this.ruleForm)\n                        .then(response => {\n                            this.loading = false;\n                            if (response.status) {\n                                this.$message.error(response.message);\n                                return;\n                            }\n                            let path = \"/\";\n                            if (this.redirect) {\n                                path = this.redirect;\n                            }\n                            this.$router.push({\n                                path: path\n                            });\n                        })\n                        .catch(() => {\n                            this.loading = false;\n                        });\n                } else {\n                    return false;\n                }\n            });\n        }\n    },\n    created() {\n        // 将参数拷贝进查询对象\n        let query = this.$route.query;\n        if (query.redirect) {\n            // URL Encode\n            this.redirect = decodeURIComponent(query.redirect);\n        } \n    }\n};\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/login","sourcesContent":["<template>\n    <div class=\"login-container\">\n        <el-form class=\"card-box login-form\" autoComplete=\"on\" :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleForm\"\n                 label-position=\"left\">\n            <h3 class=\"title\">系统登录</h3>\n            <el-form-item prop=\"username\" class=\"item\">\n                <el-input\n                    placeholder=\"用户名\"\n                    name=\"username\"\n                    autoComplete=\"on\"\n                    v-model=\"ruleForm.username\">\n                    <i slot=\"prefix\" class=\"el-input__icon\"><icon-svg icon-class=\"user\"/></i>\n                </el-input>\n            </el-form-item>\n            <el-form-item prop=\"password\" class=\"item\">\n                <el-input\n                    placeholder=\"密码\"\n                    name=\"password\"\n                    type=\"password\"\n                    @keyup.enter.native=\"handleLogin\"\n                    v-model=\"ruleForm.password\"\n                    autoComplete=\"on\">\n                    <i slot=\"prefix\" class=\"el-input__icon\"><icon-svg icon-class=\"password\"/></i>\n                    <i slot=\"suffix\" class=\"el-input__icon\" @click='isShowpassword = !isShowpassword'><icon-svg icon-class=\"eye\"/></i>\n                </el-input>\n            </el-form-item>\n            <div>\n                <el-button type=\"primary\" style=\"width:100%;margin-bottom:30px;\" :loading=\"loading\"\n                           @click.native=\"handleLogin()\">登录\n                </el-button>\n            </div>\n        </el-form>\n\n    </div>\n</template>\n\n<script>\n\nexport default {\n    data() {\n        let validatepassword = (rule, value, callback) => {\n            if (value === \"\") {\n                callback(new Error(\"请输入密码\"))\n                return\n            } \n            callback()\n        }\n        return {\n            ruleForm: {\n                username: \"admin\",\n                password: \"admin\",\n                checked: true\n            },\n            rules: {\n                userName: [\n                    { required: true, message: \"请输入登录名\", trigger: \"blur\" }\n                ],\n                password: [{ required: true, validator: validatepassword, trigger: \"blur\" }]\n            },\n            loading: false, // 登录loading\n            redirect: null // 回调地址\n        };\n    },\n    methods: {\n        handleLogin() {\n            this.$refs[\"ruleForm\"].validate(valid => {\n                if (valid) {\n                    this.loading = true;\n                    this.$store\n                        .dispatch(\"loginName\", this.ruleForm)\n                        .then(response => {\n                            this.loading = false;\n                            if (response.status) {\n                                this.$message.error(response.message);\n                                return;\n                            }\n                            let path = \"/\";\n                            if (this.redirect) {\n                                path = this.redirect;\n                            }\n                            this.$router.push({\n                                path: path\n                            });\n                        })\n                        .catch(() => {\n                            this.loading = false;\n                        });\n                } else {\n                    return false;\n                }\n            });\n        }\n    },\n    created() {\n        // 将参数拷贝进查询对象\n        let query = this.$route.query;\n        if (query.redirect) {\n            // URL Encode\n            this.redirect = decodeURIComponent(query.redirect);\n        } \n    }\n};\n</script>\n\n<style type=\"text/scss\" lang=\"scss\">\n@import \"../../styles/mixin\";\n\n$bg: #2d3a4b;\n$dark_gray: #889aa4;\n$light_gray: #eee;\n.login-container {\n    @include relative;\n    height: 100%;\n    background-color: $bg;\n    input:-webkit-autofill {\n        -webkit-box-shadow: 0 0 0 1000px #293444 inset !important;\n        -webkit-text-fill-color: #fff !important;\n    }\n    .item {\n        .el-form-item__content {\n            display: flex;\n            flex-flow: row;\n        }\n    }\n    input {\n        background: transparent;\n        border: 0;\n        -webkit-appearance: none;\n        border-radius: 0;\n        padding: 0.46rem 0.0666rem 0.16rem 0.2rem;\n        color: $light_gray;\n        height: 100%;\n    }\n    .el-input {\n        display: inline-block;\n    }\n    .tips {\n        font-size: 14px;\n        color: #fff;\n        margin-bottom: 0.13333rem;\n    }\n    .svg-container {\n        padding: 0.08rem 0.0666rem 0.08rem 0.2rem;\n        color: $dark_gray;\n        vertical-align: middle;\n        display: inline-block;\n        &_login {\n            font-size: 20px;\n        }\n    }\n    .title {\n        font-size: 26px;\n        color: $light_gray;\n        margin: 0 auto 0.5333rem auto;\n        text-align: center;\n        font-weight: bold;\n    }\n    .login-form {\n        @include fxied-center;\n        top: 35%;\n        width: 22em;\n        padding: 0.4666rem 0.4666rem 0.2rem 0.4666rem;\n    }\n    .el-form-item {\n        border: 1px solid rgba(255, 255, 255, 0.1);\n        background: rgba(0, 0, 0, 0.1);\n        border-radius: 0.0666rem;\n        color: #454545;\n    }\n    .show-password {\n        position: absolute;\n        right: 0.1333rem;\n        top: 0.09333rem;\n        font-size: 16px;\n        color: $dark_gray;\n        cursor: pointer;\n    }\n    .thirdparty-button {\n        /*position: absolute;*/\n        /*right: .4666rem;*/\n        /*bottom: .37333rem;*/\n    }\n}\n</style>\n"]}]}